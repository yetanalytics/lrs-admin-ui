nav.query {
  display: grid;
}

nav.query > .json-map {
  margin-left: 1em;
  margin-bottom: 1em;
}

label.query-toggle {
  display: inline-block;
  margin: 1em;
}

a.query-remove-link {
  padding: 1em;
}

body > main {
  height: 100%;
}

/* JSON-specific */
.json-map {
  display:grid;
  grid-template-columns: 1fr;
  position: relative;
}

.json-array {
  display:grid;
  position: relative;
}

.json-array.columnar {
  grid-template-columns: repeat(auto-fill, minmax(max-content, 8em));
}

.json-array-element {
}

.json-map-entry {
  display:grid;
  grid-template-columns: minmax(max-content, 9em) 1fr;
  align-items: center;
}

/* json-map-action shares layout styling with json-map-entry but contains actions */
.json-map-action {
  display:grid;
  grid-template-columns: 1fr;
  padding: 1em 0em;
}

.json-map-entry-key {
  padding: 1em 1em 1em 1.25em;
  background-color: rgba(0,0,0,.025);
  height: calc(100% - 2em);
  border-right: #11375C solid 0.1em;
  position: relative;
}

.json-map-entry-key:after {
  content: ":";
}

/* leaf inner */
.json-scalar {
  text-overflow: ellipsis;
  display: inline;
  padding-left: 1em;
}

/* truncation.. inline collapse with json in mind */
/* expects a truncator input, preceded by label. Will hide the rest of the things except .no-truncate */
label.truncator-label {
  padding: 1em 1em 1em 1.25em;
  cursor: pointer;
  border-bottom: #EBEBEB solid 0.1em;
  margin-bottom: 0px;
}

.json-map > input.truncator:checked ~ label.truncator-label {
  position: absolute;
  bottom: 0;
  left: 0;
}

/* Make some space at the end for it */
.json-map > input.truncator:checked ~ :last-child {
  margin-bottom: 3.25em;
}

.json-array:not(.columnar) > input.truncator:checked ~ :last-child {
  margin-bottom: 3.25em;
}

.json-array:not(.columnar) > input.truncator:checked ~ label.truncator-label {
  position: absolute;
  bottom: 0;
  left: 0;
}

.json-map > label.truncator-label::before {
  display: contents;
  content: "{ + ";
}

.json-map > input.truncator:checked ~ label.truncator-label::before {
  display: contents;
  content: "{ - ";
}

.json-map > label.truncator-label::after {
  display: contents;
  content: " }";
}

.json-array > label.truncator-label::before {
  display: contents;
  content: "[ + ";
}

.json-array > input.truncator:checked ~ label.truncator-label::before {
  display: contents;
  content: "[ - ";
}

.json-array > label.truncator-label::after {
  display: contents;
  content: " ]";
}

input.truncator ~ :not(.no-truncate,label.truncator-label) {
  display: none;
}

input.truncator:checked ~ :not(.no-truncate).json {
  display: grid;
}

/* togglable */
input.truncator-toggle ~ :not(.no-truncate,label.truncator-toggle-label) {
  display: none;
}

input.truncator-toggle:checked ~ :not(.no-truncate,label.truncator-toggle-label) {
  display: grid;
}

label.truncator-toggle-label:after {
  content: "+";
  display: inline-block;
}

input.truncator-toggle:checked ~ label.truncator-toggle-label:after {
  content: "-";
}

/* asc/desc control */

.toggle-ascending {
  position: absolute;
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr;
  font-style: italic;
}

.toggle-ascending a {
  color: white !important;
  font-style: normal;
  text-decoration: underline;
}

div.toggle-ascending a:hover {
  color: white;
  text-decoration: none;
}

.browser {
  /*font-family: monospace;*/
  font-size: .8em;
  border: 2px solid black;
  margin-top: 10px;
  overflow-x: auto;
}

div.json {
  box-sizing: content-box;
  white-space: nowrap;
}

.white-on-brand {
  background-color: #11375C;
  color: white;
}

div.json-array[data-path="statements"] > div.json-array-element > div.json-map > div.json-map-entry[data-entry-key-name="id"] > div.json-map-entry-key {
  @extend .white-on-brand;
}

div.json-map-entry[data-entry-key-name="statements"] > div.json-map-entry-key {
  @extend .white-on-brand;
}

div.json-map-entry[data-entry-key-name="more"] > div.json-map-entry-key {
  @extend .white-on-brand;
}

div.browser > div.json-map > div.json-map-entry[data-entry-key-name="id"] > div.json.json-map-entry-key {
  @extend .white-on-brand;
}

div.json-map-entry-key {
  padding: 1em;
}

div.browser a:hover {
  color: black;
}

.action-icon-list li a.icon-clear-filters {
  background: url('../images/icons/icon-close-brand.svg') no-repeat left center;
  padding: 8px;
  padding-left: 38px;
  margin-top: 10px;
}

.action-icon-list li a.icon-clear-filters:hover {
  background: url('../images/icons/icon-close-black.svg') no-repeat left center;
}

a.icon-refresh {
  background: url('../images/icons/refresh-brand.svg') no-repeat left center;
  display: inline-block;
  padding: 4px 4px 4px 24px;
  margin: 2px 0 0 4px;
  color: #137bce;
}

a.icon-refresh:hover {
  background: url('../images/icons/refresh-brand.svg') no-repeat left center;
  color: black;
}
