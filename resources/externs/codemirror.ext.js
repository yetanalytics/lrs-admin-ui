/**********************************************************************
 * Extern for CodeMirror
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var CodeMirror = {
  "Doc": function () {},
  "Init": {
    "toString": function () {}
  },
  "Line": function () {},
  "LineWidget": function () {},
  "Pass": {
    "toString": function () {}
  },
  "Pos": function () {},
  "SharedTextMarker": function () {},
  "StringStream": function () {},
  "TextMarker": function () {},
  "addClass": function () {},
  "changeEnd": function () {},
  "cmpPos": function () {},
  "commands": {
    "defaultTab": function () {},
    "delCharAfter": function () {},
    "delCharBefore": function () {},
    "delGroupAfter": function () {},
    "delGroupBefore": function () {},
    "delLineLeft": function () {},
    "delWordAfter": function () {},
    "delWordBefore": function () {},
    "delWrappedLineLeft": function () {},
    "delWrappedLineRight": function () {},
    "deleteLine": function () {},
    "goCharLeft": function () {},
    "goCharRight": function () {},
    "goColumnLeft": function () {},
    "goColumnRight": function () {},
    "goDocEnd": function () {},
    "goDocStart": function () {},
    "goGroupLeft": function () {},
    "goGroupRight": function () {},
    "goLineDown": function () {},
    "goLineEnd": function () {},
    "goLineLeft": function () {},
    "goLineLeftSmart": function () {},
    "goLineRight": function () {},
    "goLineStart": function () {},
    "goLineStartSmart": function () {},
    "goLineUp": function () {},
    "goPageDown": function () {},
    "goPageUp": function () {},
    "goWordLeft": function () {},
    "goWordRight": function () {},
    "indentAuto": function () {},
    "indentLess": function () {},
    "indentMore": function () {},
    "insertSoftTab": function () {},
    "insertTab": function () {},
    "killLine": function () {},
    "newlineAndIndent": function () {},
    "openLine": function () {},
    "redo": function () {},
    "redoSelection": function () {},
    "selectAll": function () {},
    "singleSelection": function () {},
    "toggleOverwrite": function () {},
    "transposeChars": function () {},
    "undo": function () {},
    "undoSelection": function () {}
  },
  "contains": function () {},
  "copyState": function () {},
  "countColumn": function () {},
  "defaults": {
    "addModeClass": {},
    "allowDropFileTypes": {},
    "autocapitalize": {},
    "autocorrect": {},
    "autofocus": {},
    "configureMouse": {},
    "coverGutterNextToScrollbar": {},
    "cursorBlinkRate": {},
    "cursorHeight": {},
    "cursorScrollMargin": {},
    "direction": {},
    "disableInput": {},
    "dragDrop": {},
    "electricChars": {},
    "extraKeys": {},
    "firstLineNumber": {},
    "fixedGutter": {},
    "flattenSpans": {},
    "gutters": {},
    "historyEventDelay": {},
    "indentUnit": {},
    "indentWithTabs": {},
    "inputStyle": {},
    "keyMap": {},
    "lineNumberFormatter": function () {},
    "lineNumbers": {},
    "lineSeparator": {},
    "lineWiseCopyCut": {},
    "lineWrapping": {},
    "maxHighlightLength": {},
    "mode": {},
    "moveInputWithCursor": {},
    "pasteLinesPerSelection": {},
    "phrases": {},
    "pollInterval": {},
    "readOnly": {},
    "resetSelectionOnContextMenu": {},
    "rtlMoveVisually": {},
    "scrollbarStyle": {},
    "selectionsMayTouch": {},
    "showCursorWhenSelecting": {},
    "singleCursorHeightPerLine": {},
    "smartIndent": {},
    "specialCharPlaceholder": function () {},
    "specialChars": {},
    "spellcheck": {},
    "tabSize": {},
    "tabindex": {},
    "theme": {},
    "undoDepth": {},
    "value": {},
    "viewportMargin": {},
    "wholeLineUpdateBefore": {},
    "workDelay": {},
    "workTime": {}
  },
  "defineDocExtension": function () {},
  "defineExtension": function () {},
  "defineInitHook": function () {},
  "defineMIME": function () {},
  "defineMode": function () {},
  "defineOption": function () {},
  "e_preventDefault": function () {},
  "e_stop": function () {},
  "e_stopPropagation": function () {},
  "extendMode": function () {},
  "findColumn": function () {},
  "fromTextArea": function () {},
  "getMode": function () {},
  "helpers": {},
  "innerMode": function () {},
  "inputStyles": {
    "contenteditable": function () {},
    "textarea": function () {}
  },
  "isModifierKey": function () {},
  "isWordChar": function () {},
  "keyMap": {
    "basic": {
      "Backspace": {},
      "Delete": {},
      "Down": {},
      "End": {},
      "Enter": {},
      "Esc": {},
      "Home": {},
      "Insert": {},
      "Left": {},
      "PageDown": {},
      "PageUp": {},
      "Right": {},
      "Shift-Backspace": {},
      "Shift-Tab": {},
      "Tab": {},
      "Up": {}
    },
    "default": {
      "Alt-Backspace": {},
      "Alt-Delete": {},
      "Alt-Left": {},
      "Alt-Right": {},
      "Cmd-A": {},
      "Cmd-Alt-F": {},
      "Cmd-Backspace": {},
      "Cmd-D": {},
      "Cmd-Delete": {},
      "Cmd-Down": {},
      "Cmd-End": {},
      "Cmd-F": {},
      "Cmd-G": {},
      "Cmd-Home": {},
      "Cmd-Left": {},
      "Cmd-Right": {},
      "Cmd-S": {},
      "Cmd-U": {},
      "Cmd-Up": {},
      "Cmd-Y": {},
      "Cmd-Z": {},
      "Cmd-[": {},
      "Cmd-]": {},
      "Ctrl-Alt-Backspace": {},
      "Ctrl-Down": {},
      "Ctrl-Up": {},
      "Shift-Cmd-Alt-F": {},
      "Shift-Cmd-G": {},
      "Shift-Cmd-U": {},
      "Shift-Cmd-Z": {},
      "fallthrough": {}
    },
    "emacsy": {
      "Alt-B": {},
      "Alt-Backspace": {},
      "Alt-D": {},
      "Alt-F": {},
      "Ctrl-A": {},
      "Ctrl-B": {},
      "Ctrl-D": {},
      "Ctrl-E": {},
      "Ctrl-F": {},
      "Ctrl-H": {},
      "Ctrl-K": {},
      "Ctrl-N": {},
      "Ctrl-O": {},
      "Ctrl-P": {},
      "Ctrl-T": {},
      "Ctrl-V": {},
      "Shift-Ctrl-V": {}
    },
    "macDefault": {
      "Alt-Backspace": {},
      "Alt-Delete": {},
      "Alt-Left": {},
      "Alt-Right": {},
      "Cmd-A": {},
      "Cmd-Alt-F": {},
      "Cmd-Backspace": {},
      "Cmd-D": {},
      "Cmd-Delete": {},
      "Cmd-Down": {},
      "Cmd-End": {},
      "Cmd-F": {},
      "Cmd-G": {},
      "Cmd-Home": {},
      "Cmd-Left": {},
      "Cmd-Right": {},
      "Cmd-S": {},
      "Cmd-U": {},
      "Cmd-Up": {},
      "Cmd-Y": {},
      "Cmd-Z": {},
      "Cmd-[": {},
      "Cmd-]": {},
      "Ctrl-Alt-Backspace": {},
      "Ctrl-Down": {},
      "Ctrl-Up": {},
      "Shift-Cmd-Alt-F": {},
      "Shift-Cmd-G": {},
      "Shift-Cmd-U": {},
      "Shift-Cmd-Z": {},
      "fallthrough": {}
    },
    "pcDefault": {
      "Alt-Left": {},
      "Alt-Right": {},
      "Alt-U": {},
      "Ctrl-A": {},
      "Ctrl-Backspace": {},
      "Ctrl-D": {},
      "Ctrl-Delete": {},
      "Ctrl-Down": {},
      "Ctrl-End": {},
      "Ctrl-F": {},
      "Ctrl-G": {},
      "Ctrl-Home": {},
      "Ctrl-Left": {},
      "Ctrl-Right": {},
      "Ctrl-S": {},
      "Ctrl-U": {},
      "Ctrl-Up": {},
      "Ctrl-Y": {},
      "Ctrl-Z": {},
      "Ctrl-[": {},
      "Ctrl-]": {},
      "Shift-Ctrl-F": {},
      "Shift-Ctrl-G": {},
      "Shift-Ctrl-R": {},
      "Shift-Ctrl-U": {},
      "Shift-Ctrl-Z": {},
      "fallthrough": {}
    }
  },
  "keyName": function () {},
  "keyNames": {
    "100": {},
    "101": {},
    "102": {},
    "103": {},
    "104": {},
    "105": {},
    "106": {},
    "107": {},
    "109": {},
    "110": {},
    "111": {},
    "112": {},
    "113": {},
    "114": {},
    "115": {},
    "116": {},
    "117": {},
    "118": {},
    "119": {},
    "120": {},
    "121": {},
    "122": {},
    "123": {},
    "127": {},
    "13": {},
    "145": {},
    "16": {},
    "17": {},
    "173": {},
    "18": {},
    "186": {},
    "187": {},
    "188": {},
    "189": {},
    "19": {},
    "190": {},
    "191": {},
    "192": {},
    "20": {},
    "219": {},
    "220": {},
    "221": {},
    "222": {},
    "27": {},
    "3": {},
    "32": {},
    "33": {},
    "34": {},
    "35": {},
    "36": {},
    "37": {},
    "38": {},
    "39": {},
    "40": {},
    "44": {},
    "45": {},
    "46": {},
    "48": {},
    "49": {},
    "50": {},
    "51": {},
    "52": {},
    "53": {},
    "54": {},
    "55": {},
    "56": {},
    "57": {},
    "59": {},
    "61": {},
    "63232": {},
    "63233": {},
    "63234": {},
    "63235": {},
    "63236": {},
    "63237": {},
    "63238": {},
    "63239": {},
    "63240": {},
    "63241": {},
    "63242": {},
    "63243": {},
    "63244": {},
    "63245": {},
    "63246": {},
    "63247": {},
    "63272": {},
    "63273": {},
    "63275": {},
    "63276": {},
    "63277": {},
    "63302": {},
    "65": {},
    "66": {},
    "67": {},
    "68": {},
    "69": {},
    "70": {},
    "71": {},
    "72": {},
    "73": {},
    "74": {},
    "75": {},
    "76": {},
    "77": {},
    "78": {},
    "79": {},
    "8": {},
    "80": {},
    "81": {},
    "82": {},
    "83": {},
    "84": {},
    "85": {},
    "86": {},
    "87": {},
    "88": {},
    "89": {},
    "9": {},
    "90": {},
    "91": {},
    "92": {},
    "93": {},
    "96": {},
    "97": {},
    "98": {},
    "99": {}
  },
  "lookupKey": function () {},
  "mimeModes": {
    "text/plain": {}
  },
  "modeExtensions": {},
  "modes": {
    "null": function () {}
  },
  "normalizeKeyMap": function () {},
  "off": function () {},
  "on": function () {},
  "optionHandlers": {
    "addModeClass": function () {},
    "autocapitalize": function () {},
    "autocorrect": function () {},
    "coverGutterNextToScrollbar": function () {},
    "cursorHeight": function () {},
    "direction": function () {},
    "disableInput": function () {},
    "dragDrop": function () {},
    "firstLineNumber": function () {},
    "fixedGutter": function () {},
    "flattenSpans": function () {},
    "gutters": function () {},
    "indentUnit": function () {},
    "inputStyle": function () {},
    "keyMap": function () {},
    "lineNumberFormatter": function () {},
    "lineNumbers": function () {},
    "lineSeparator": function () {},
    "lineWrapping": function () {},
    "maxHighlightLength": function () {},
    "mode": function () {},
    "moveInputWithCursor": function () {},
    "readOnly": function () {},
    "scrollbarStyle": function () {},
    "showCursorWhenSelecting": function () {},
    "singleCursorHeightPerLine": function () {},
    "specialCharPlaceholder": function () {},
    "specialChars": function () {},
    "spellcheck": function () {},
    "tabSize": function () {},
    "tabindex": function () {},
    "theme": function () {},
    "undoDepth": function () {},
    "value": function () {},
    "viewportMargin": function () {}
  },
  "registerGlobalHelper": function () {},
  "registerHelper": function () {},
  "resolveMode": function () {},
  "rmClass": function () {},
  "scrollbarModel": {
    "native": function () {},
    "null": function () {}
  },
  "signal": function () {},
  "splitLines": function () {},
  "startState": function () {},
  "version": {},
  "wheelEventPixels": function () {}
};
CodeMirror.prototype = {
  "addKeyMap": function () {},
  "addLineClass": function () {},
  "addLineWidget": function () {},
  "addOverlay": function () {},
  "addSelection": function () {},
  "addWidget": function () {},
  "changeGeneration": function () {},
  "charCoords": function () {},
  "clearGutter": function () {},
  "clearHistory": function () {},
  "clipPos": function () {},
  "constructor": function () {},
  "coordsChar": function () {},
  "cursorCoords": function () {},
  "defaultCharWidth": function () {},
  "defaultTextHeight": function () {},
  "deleteH": function () {},
  "eachLine": function () {},
  "endOperation": function () {},
  "execCommand": function () {},
  "extendSelection": function () {},
  "extendSelections": function () {},
  "extendSelectionsBy": function () {},
  "findMarks": function () {},
  "findMarksAt": function () {},
  "findPosH": function () {},
  "findPosV": function () {},
  "findWordAt": function () {},
  "firstLine": function () {},
  "focus": function () {},
  "getAllMarks": function () {},
  "getCursor": function () {},
  "getDoc": function () {},
  "getExtending": function () {},
  "getGutterElement": function () {},
  "getHelper": function () {},
  "getHelpers": function () {},
  "getHistory": function () {},
  "getInputField": function () {},
  "getLine": function () {},
  "getLineHandle": function () {},
  "getLineHandleVisualStart": function () {},
  "getLineNumber": function () {},
  "getLineTokens": function () {},
  "getMode": function () {},
  "getModeAt": function () {},
  "getOption": function () {},
  "getRange": function () {},
  "getScrollInfo": function () {},
  "getScrollerElement": function () {},
  "getSelection": function () {},
  "getSelections": function () {},
  "getStateAfter": function () {},
  "getTokenAt": function () {},
  "getTokenTypeAt": function () {},
  "getValue": function () {},
  "getViewport": function () {},
  "getWrapperElement": function () {},
  "hasFocus": function () {},
  "heightAtLine": function () {},
  "historySize": function () {},
  "indentLine": function () {},
  "indentSelection": function () {},
  "indexFromPos": function () {},
  "isClean": function () {},
  "isReadOnly": function () {},
  "iterLinkedDocs": function () {},
  "lastLine": function () {},
  "lineAtHeight": function () {},
  "lineCount": function () {},
  "lineInfo": function () {},
  "lineSeparator": function () {},
  "linkedDoc": function () {},
  "listSelections": function () {},
  "markClean": function () {},
  "markText": function () {},
  "moveH": function () {},
  "moveV": function () {},
  "off": function () {},
  "on": function () {},
  "operation": function () {},
  "phrase": function () {},
  "posFromIndex": function () {},
  "redo": function () {},
  "redoSelection": function () {},
  "refresh": function () {},
  "removeKeyMap": function () {},
  "removeLineClass": function () {},
  "removeLineWidget": function () {},
  "removeOverlay": function () {},
  "replaceRange": function () {},
  "replaceSelection": function () {},
  "replaceSelections": function () {},
  "scrollIntoView": function () {},
  "scrollTo": function () {},
  "setBookmark": function () {},
  "setCursor": function () {},
  "setDirection": function () {},
  "setExtending": function () {},
  "setGutterMarker": function () {},
  "setHistory": function () {},
  "setOption": function () {},
  "setSelection": function () {},
  "setSelections": function () {},
  "setSize": function () {},
  "setValue": function () {},
  "somethingSelected": function () {},
  "splitLines": function () {},
  "startOperation": function () {},
  "swapDoc": function () {},
  "toggleOverwrite": function () {},
  "triggerElectric": function () {},
  "triggerOnKeyDown": function () {},
  "triggerOnKeyPress": function () {},
  "triggerOnKeyUp": function () {},
  "triggerOnMouseDown": function () {},
  "undo": function () {},
  "undoSelection": function () {},
  "unlinkDoc": function () {}
};
CodeMirror.Doc.prototype = {
  "addLineClass": function () {},
  "addLineWidget": function () {},
  "addSelection": function () {},
  "changeGeneration": function () {},
  "chunkSize": function () {},
  "clearGutter": function () {},
  "clearHistory": function () {},
  "clipPos": function () {},
  "collapse": function () {},
  "constructor": function () {},
  "copy": function () {},
  "eachLine": function () {},
  "extendSelection": function () {},
  "extendSelections": function () {},
  "extendSelectionsBy": function () {},
  "findMarks": function () {},
  "findMarksAt": function () {},
  "firstLine": function () {},
  "getAllMarks": function () {},
  "getCursor": function () {},
  "getEditor": function () {},
  "getExtending": function () {},
  "getHistory": function () {},
  "getLine": function () {},
  "getLineHandle": function () {},
  "getLineHandleVisualStart": function () {},
  "getLineNumber": function () {},
  "getMode": function () {},
  "getRange": function () {},
  "getSelection": function () {},
  "getSelections": function () {},
  "getValue": function () {},
  "historySize": function () {},
  "indexFromPos": function () {},
  "insert": function () {},
  "insertInner": function () {},
  "isClean": function () {},
  "iter": function () {},
  "iterLinkedDocs": function () {},
  "iterN": function () {},
  "lastLine": function () {},
  "lineCount": function () {},
  "lineInfo": function () {},
  "lineSeparator": function () {},
  "linkedDoc": function () {},
  "listSelections": function () {},
  "markClean": function () {},
  "markText": function () {},
  "maybeSpill": function () {},
  "off": function () {},
  "on": function () {},
  "posFromIndex": function () {},
  "redo": function () {},
  "redoSelection": function () {},
  "remove": function () {},
  "removeInner": function () {},
  "removeLineClass": function () {},
  "removeLineWidget": function () {},
  "replaceRange": function () {},
  "replaceSelection": function () {},
  "replaceSelections": function () {},
  "setBookmark": function () {},
  "setCursor": function () {},
  "setDirection": function () {},
  "setExtending": function () {},
  "setGutterMarker": function () {},
  "setHistory": function () {},
  "setSelection": function () {},
  "setSelections": function () {},
  "setValue": function () {},
  "somethingSelected": function () {},
  "splitLines": function () {},
  "undo": function () {},
  "undoSelection": function () {},
  "unlinkDoc": function () {}
};
CodeMirror.Line.prototype = {
  "lineNo": function () {},
  "off": function () {},
  "on": function () {}
};
CodeMirror.LineWidget.prototype = {
  "changed": function () {},
  "clear": function () {},
  "off": function () {},
  "on": function () {}
};
CodeMirror.SharedTextMarker.prototype = {
  "clear": function () {},
  "find": function () {},
  "off": function () {},
  "on": function () {}
};
CodeMirror.StringStream.prototype = {
  "backUp": function () {},
  "baseToken": function () {},
  "column": function () {},
  "current": function () {},
  "eat": function () {},
  "eatSpace": function () {},
  "eatWhile": function () {},
  "eol": function () {},
  "hideFirstChars": function () {},
  "indentation": function () {},
  "lookAhead": function () {},
  "match": function () {},
  "next": function () {},
  "peek": function () {},
  "skipTo": function () {},
  "skipToEnd": function () {},
  "sol": function () {}
};
CodeMirror.TextMarker.prototype = {
  "attachLine": function () {},
  "changed": function () {},
  "clear": function () {},
  "detachLine": function () {},
  "find": function () {},
  "off": function () {},
  "on": function () {}
};
CodeMirror.inputStyles.contenteditable.prototype = {
  "blur": function () {},
  "ensurePolled": function () {},
  "focus": function () {},
  "forceCompositionEnd": function () {},
  "getField": function () {},
  "getSelection": function () {},
  "init": function () {},
  "needsContentAttribute": function () {},
  "onContextMenu": function () {},
  "onKeyPress": function () {},
  "pollContent": function () {},
  "pollSelection": function () {},
  "prepareSelection": function () {},
  "readFromDOMSoon": function () {},
  "readOnlyChanged": function () {},
  "receivedFocus": function () {},
  "rememberSelection": function () {},
  "reset": function () {},
  "resetPosition": function () {},
  "selectionChanged": function () {},
  "selectionInEditor": function () {},
  "setUneditable": function () {},
  "showMultipleSelections": function () {},
  "showPrimarySelection": function () {},
  "showSelection": function () {},
  "startGracePeriod": function () {},
  "supportsTouch": function () {},
  "updateFromDOM": function () {}
};
CodeMirror.inputStyles.textarea.prototype = {
  "blur": function () {},
  "createField": function () {},
  "ensurePolled": function () {},
  "fastPoll": function () {},
  "focus": function () {},
  "getField": function () {},
  "init": function () {},
  "needsContentAttribute": function () {},
  "onContextMenu": function () {},
  "onKeyPress": function () {},
  "poll": function () {},
  "prepareSelection": function () {},
  "readOnlyChanged": function () {},
  "receivedFocus": function () {},
  "reset": function () {},
  "resetPosition": function () {},
  "setUneditable": function () {},
  "showSelection": function () {},
  "slowPoll": function () {},
  "supportsTouch": function () {}
};
CodeMirror.scrollbarModel.native.prototype = {
  "clear": function () {},
  "enableZeroWidthBar": function () {},
  "setScrollLeft": function () {},
  "setScrollTop": function () {},
  "update": function () {},
  "zeroWidthHack": function () {}
};
CodeMirror.scrollbarModel.null.prototype = {
  "clear": function () {},
  "setScrollLeft": function () {},
  "setScrollTop": function () {},
  "update": function () {}
};
/**********************************************************************
 * End Generated Extern for CodeMirror
/**********************************************************************/
